[
  {
    "name": "Model",
    "comment": " This is the Model, where we model and initize our data.\n\n# Data to bootstrap the app\n@docs Flags\n\n# How our application data should look\n@docs Model\n\n# Messages to pass throughout the application\n@docs Msg\n\n\n# Function that initizes the model with data\n@docs init\n\n# init model data\n@docs initModel\n\n",
    "aliases": [
      {
        "name": "Flags",
        "comment": " Represents what data I should start up with\n",
        "args": [],
        "type": "{ token : String, firstName : String }"
      },
      {
        "name": "Model",
        "comment": " The data model for the entire application.\n\n",
        "args": [],
        "type": "{ authRecord : Entity.AuthRecord , spin : Bool , activeRoute : Routing.Route , changes : Int , api : String , jwtencoded : String , jwtdecoded : Result.Result Jwt.JwtError Auth.JwtPayload , error : String , presses : List Char , user : Entity.User , menuIsActive : Bool , mainMenuItems : List Routing.MenuItem , greeting : String , test : String , currentTime : Time.Time , currentTimeDelta : Time.Time , games : List Entity.Game }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " Represents messages to be passed throughout the application.\nTypically called from the View and handled by the Update to move the Model forward\n\n",
        "args": [],
        "cases": [
          [
            "UpdateEmail",
            [
              "String"
            ]
          ],
          [
            "UpdatePassword",
            [
              "String"
            ]
          ],
          [
            "TryLogin",
            []
          ],
          [
            "LoginResponse",
            [
              "Result.Result Http.Error Entity.Auth"
            ]
          ],
          [
            "UserResponse",
            [
              "Result.Result Http.Error Entity.User"
            ]
          ],
          [
            "GameResponse",
            [
              "Result.Result Http.Error Entity.Game"
            ]
          ],
          [
            "Presses",
            [
              "Char"
            ]
          ],
          [
            "UpdateLocation",
            [
              "String"
            ]
          ],
          [
            "OnUpdateLocation",
            [
              "Navigation.Location"
            ]
          ],
          [
            "MainMenuToggle",
            []
          ],
          [
            "Logout",
            []
          ],
          [
            "GetTimeAndThen",
            [
              "Time.Time -> Model.Msg"
            ]
          ],
          [
            "CalcTimeDelta",
            [
              "Time.Time"
            ]
          ],
          [
            "Tick",
            [
              "Time.Time"
            ]
          ],
          [
            "VerifyToken",
            [
              "Time.Time"
            ]
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "init",
        "comment": " initialize the model with data\n",
        "type": "Model.Flags -> Navigation.Location -> ( Model.Model, Platform.Cmd.Cmd Model.Msg )"
      },
      {
        "name": "initModel",
        "comment": " The data model as it is, was and will be\n\n",
        "type": "Model.Flags -> Navigation.Location -> Model.Model"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]