[
  {
    "name": "Model",
    "comment": " This is the Model, where we model and initialize our data.\n\n# Data to bootstrap the app\n@docs Flags\n\n# How our application data should look\n@docs Model\n\n# Name, email, id of User\n@docs User\n\n# Messages to pass throughout the application\n@docs Msg\n\n# A page in the application\n@docs Page\n\n# Function that initializes the model with data\n@docs init\n\n\n",
    "aliases": [
      {
        "name": "Flags",
        "comment": " Represents what data I should start up with\n",
        "args": [],
        "type": "{ token : String }"
      },
      {
        "name": "Model",
        "comment": " The data model for the entire application.\n\n",
        "args": [],
        "type": "{ email : String , password : String , spin : Bool , activePage : Model.Page , api : String , jwtencoded : String , jwtdecoded : Result.Result Jwt.JwtError Auth.JwtPayload , error : String , presses : List Char , user : Model.User }"
      },
      {
        "name": "User",
        "comment": " A user!\n",
        "args": [],
        "type": "{ id : String , email : String , username : String , firstName : String , lastName : String }"
      }
    ],
    "types": [
      {
        "name": "Msg",
        "comment": " Represents messages to be passed throughout the application.\nTypically called from the View and handled by the Update to move the Model forward\n\n",
        "args": [],
        "cases": [
          [
            "LoginEmail",
            [
              "String"
            ]
          ],
          [
            "LoginPassword",
            [
              "String"
            ]
          ],
          [
            "TryLogin",
            []
          ],
          [
            "LoginResponse",
            [
              "Result.Result Http.Error String"
            ]
          ],
          [
            "UserResponse",
            [
              "Result.Result Http.Error Model.User"
            ]
          ],
          [
            "Presses",
            [
              "Char"
            ]
          ],
          [
            "SetActivePage",
            [
              "Model.Page"
            ]
          ],
          [
            "CheckTokenExpiry",
            [
              "Time.Time"
            ]
          ]
        ]
      },
      {
        "name": "Page",
        "comment": " Represents where I am in the application\n",
        "args": [],
        "cases": [
          [
            "AccessDenied",
            []
          ],
          [
            "PageNotFound",
            []
          ],
          [
            "Login",
            []
          ],
          [
            "Games",
            []
          ],
          [
            "Badges",
            []
          ]
        ]
      }
    ],
    "values": [
      {
        "name": "init",
        "comment": " initialize the model with data\n",
        "type": "Model.Flags -> ( Model.Model, Platform.Cmd.Cmd Model.Msg )"
      }
    ],
    "generated-with-elm-version": "0.18.0"
  }
]